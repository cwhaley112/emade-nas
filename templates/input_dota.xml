<?xml version="1.0"?>

<input>
    <pythonConfig>
        <localPythonCommand>python</localPythonCommand>
        <gridPythonPath>/home/adunn39-gtri/anaconda3/pthon</gridPythonPath>
        <slurmPythonPathMaster>/home/adunn39-gtri/.conda/envs/tensorflow_env/bin/python3</slurmPythonPathMaster>
        <slurmPythonPathWorker>/home/adunn39-gtri/.conda/envs/tensorflow_env/bin/python3</slurmPythonPathWorker>
    </pythonConfig>
    <dbConfig>
        <server></server>
        <username></username>
        <password></password>
        <database></database>
        <reuse>0</reuse>
    </dbConfig>
    <cacheConfig>
        <useCache>false</useCache>
        <masterWaitTime>60</masterWaitTime>
        <central>true</central>
        <compression>false</compression>
        <cacheLimit>10000000</cacheLimit>
        <timeThreshold>0</timeThreshold>
        <timeout>300</timeout>
    </cacheConfig>
    <datasets>
        <dataset>
            <name>SmallDataSet</name>
            <type>featuredata</type>
            <MonteCarlo>
                <trial>
                    <trainFilename>datasets/dota/dota_data_set_train_small.dat.gz</trainFilename>
                    <testFilename>datasets/dota/dota_data_set_test_small.dat.gz</testFilename>
                </trial>
            </MonteCarlo>
        </dataset>
        <dataset>
            <name>FullDataSet</name>
            <type>featuredata</type>
            <MonteCarlo>
                <trial>
                    <trainFilename>datasets/dota/dota_data_set_train_0.dat.gz</trainFilename>
                    <testFilename>datasets/dota/dota_data_set_test_0.dat.gz</testFilename>
                </trial>
                <trial>
                    <trainFilename>datasets/dota/dota_data_set_train_1.dat.gz</trainFilename>
                    <testFilename>datasets/dota/dota_data_set_test_1.dat.gz</testFilename>
                </trial>
                <trial>
                    <trainFilename>datasets/dota/dota_data_set_train_2.dat.gz</trainFilename>
                    <testFilename>datasets/dota/dota_data_set_test_2.dat.gz</testFilename>
                </trial>
                <trial>
                    <trainFilename>datasets/dota/dota_data_set_train_3.dat.gz</trainFilename>
                    <testFilename>datasets/dota/dota_data_set_test_3.dat.gz</testFilename>
                </trial>
                <trial>
                    <trainFilename>datasets/dota/dota_data_set_train_4.dat.gz</trainFilename>
                    <testFilename>datasets/dota/dota_data_set_test_4.dat.gz</testFilename>
                </trial>
            </MonteCarlo>
        </dataset>
    </datasets>

    <objectives>
        <objective>
            <name>False Positives</name>
            <weight>-1.0</weight>
            <achievable>300.0</achievable>
            <goal>150.0</goal>
            <evaluationFunction>false_positive</evaluationFunction>
            <lower>0</lower>
            <upper>1</upper>
        </objective>
        <objective>
            <name>False Negatives</name>
            <weight>-1.0</weight>
            <achievable>200.0</achievable>
            <goal>45.0</goal>
            <evaluationFunction>false_negative</evaluationFunction>
            <lower>0</lower>
            <upper>1</upper>
        </objective>
        <!-- <objective>
            <name>ROC AUC</name>
            <weight>-1.0</weight>
            <achievable>0.6</achievable>
            <goal>0.5</goal>
            <evaluationFunction>roc_auc</evaluationFunction>
            <lower>0</lower>
            <upper>1</upper>
        </objective> -->
        <objective>
            <name>F1-Score</name>
            <weight>-1.0</weight>
            <achievable>0.3</achievable>
            <goal>0</goal>
            <evaluationFunction>f1_score_min</evaluationFunction>
            <lower>0</lower>
            <upper>1</upper>
        </objective>
        <!-- <objective>
            <name>RMS Error</name>
            <weight>-1.0</weight>
            <achievable>7.0</achievable>
            <goal>0</goal>
            <evaluationFunction>objective0EvalFunction</evaluationFunction>
            <lower>0</lower>
            <upper>1</upper>
        </objective> -->
        <objective>
            <name>Num Elements</name>
            <weight>-1.0</weight>
            <achievable>20.0</achievable>
            <goal>0</goal>
            <evaluationFunction>num_elements_eval_function</evaluationFunction>
            <lower>0</lower>
            <upper>1</upper>
        </objective>

    </objectives>

    <evaluation>
        <module>eval_methods</module>
        <memoryLimit>8000</memoryLimit> <!-- In MB -->
    </evaluation>


    <localRunParameters>
      <workersPerHost>4</workersPerHost>
    </localRunParameters>
    <slurmEngineParameters>
      <numHosts>6</numHosts>
      <workersPerHost>3</workersPerHost>
      <jobName>emade.test</jobName>
      <runtime>0-06:00</runtime> <!--Optional runtime in D-HH:MM -->
      <modules>python/3.6.1 anaconda3/4.4.0</modules> <!--space delimited list of module names -->
      <otherHardwareRequestString></otherHardwareRequestString> <!--e.g request specific GPU-->
      <memoryToAlloc>8</memoryToAlloc> <!--mem-per-cpu in GB-->
      <specificNode></specificNode>
      <anacondaEnvironmentMaster>tensorflow_env</anacondaEnvironmentMaster>
      <anacondaEnvironmentWorker>tensorflow_env</anacondaEnvironmentWorker>
      <numberOfGPUs>0</numberOfGPUs>
    </slurmEngineParameters>
    <gridEngineParameters>
      <numHosts>2</numHosts>
      <workersPerHost>3</workersPerHost>
      <project>EOSL</project>
      <queue>all.q</queue>
      <parallelEnv>emade</parallelEnv>
    </gridEngineParameters>

    <evolutionParameters>
        <initialPopulationSize>512</initialPopulationSize>
        <elitePoolSize>512</elitePoolSize>
        <launchSize>300</launchSize>
        <minQueueSize>200</minQueueSize>
        <outlierPenalty>0.2</outlierPenalty>

        <matings>
            <mating>
                <name>crossover</name>
                <probability>0.50</probability>
            </mating>
            <mating>
                <name>crossoverEphemeral</name>
                <probability>0.50</probability>
            </mating>
            <mating>
                <name>headlessChicken</name>
                <probability>0.10</probability>
            </mating>
            <mating>
                <name>headlessChickenEphemeral</name>
                <probability>0.10</probability>
            </mating>
        </matings>

        <mutations>
            <mutation>
                <name>insert</name>
                <probability>0.05</probability>
            </mutation>
            <mutation>
                <name>insert modify</name>
                <probability>0.10</probability>
            </mutation>
            <mutation>
                <name>ephemeral</name>
                <probability>0.25</probability>
            </mutation>
            <mutation>
                <name>node replace</name>
                <probability>0.05</probability>
            </mutation>
            <mutation>
                <name>uniform</name>
                <probability>0.05</probability>
            </mutation>
            <mutation>
                <name>shrink</name>
                <probability>0.05</probability>
            </mutation>
        </mutations>

        <selections>
            <selection>
                <name>sel_nsga2</name>
            </selection>
        </selections>

    </evolutionParameters>

    <seedFile>
        <!--<filename>saved_runs/adult_1/paretoFrontAdult17355.txt</filename>-->
        <!-- <filename>saved_runs/adult_2/paretoFrontAdult28687.txt</filename> -->
        <!--<filename>saved_runs/adult_6/paretoFrontAdult31206.txt</filename>-->
        <!--<filename>./pickledComplexTrees.dat</filename>-->
        <!--<filename>./saved_runs/adult_seeded_2/paretoFrontAdult1530.txt</filename>-->
        <!--<filename>./saved_runs/adult_unseeded_1/paretoFrontAdult12651.txt</filename>-->

    </seedFile>

    <genePoolFitness>
        <prefix>genePoolFitnessDotat</prefix>
    </genePoolFitness>
    <paretoFitness>
        <prefix>paretoFitnessDotat</prefix>
    </paretoFitness>
    <parentsOutput>
        <prefix>parentsDota</prefix>
    </parentsOutput>

    <paretoOutput>
        <prefix>paretoFrontDota</prefix>
    </paretoOutput>
</input>
