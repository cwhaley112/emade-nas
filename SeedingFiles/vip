Learner(Word2VecVectorizer(Stemmatizer(ARG0, 0, 0), 2, 100, 300, 0, trueBool), learnerType('KMEANS', {'n_clusters': 8}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 0, 0), 2, 100, 300, 0, trueBool), learnerType('KNN', {'K': 3, 'weights': 0}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 0, 0), 2, 100, 300, 0, trueBool), learnerType('ARGMIN', {'sampling_rate': 1}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 0, 0), 2, 100, 300, 0, trueBool), learnerType('LINSVC', {'C': 1.0}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 0, 0), 2, 100, 300, 0, falseBool), learnerType('LINSVC', {'C': 1.0}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 0, 0), 2, 100, 300, 0, falseBool), learnerType('ARGMAX', {'sampling_rate': 1}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 0, 0), 2, 100, 300, 0, falseBool), learnerType('ADABOOST_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 100}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 0, 0), 2, 100, 300, 0, falseBool), learnerType('RAND_FOREST', {'n_estimators': 100, 'criterion': 0, 'max_depth': 3, 'class_weight': 0}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 0, 0), trueBool, 0, 2, 3), learnerType('KNN', {'K': 3, 'weights': 0}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 0, 0), trueBool, 0, 2, 3), learnerType('RAND_FOREST', {'n_estimators': 100, 'criterion': 0, 'max_depth': 3, 'class_weight': 0}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 0, 0), trueBool, 0, 2, 3), learnerType('LINSVC', {'C': 1.0}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 0, 0), trueBool, 0, 2, 3), learnerType('EXTRATREES', {'n_estimators': 100, 'max_depth': 6, 'criterion': 0}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 0, 0), falseBool, 0, 2, 2), learnerType('ARGMAX', {'sampling_rate': 1}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 0, 0), falseBool, 0, 2, 2), learnerType('LINSVC', {'C': 1.0}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 0, 0), falseBool, 0, 2, 2), learnerType('LIGHTGBM', {'max_depth': -1, 'learning_rate': 0.1, 'boosting_type': 0, 'num_leaves': 31}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 0, 0), falseBool, 0, 2, 2), learnerType('KNN', {'K': 3, 'weights': 0}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 0, 0), trueBool, 0, 2, 2), learnerType('LINSVC', {'C': 1.0}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 0, 0), trueBool, 0, 2, 2), learnerType('KNN', {'K': 3, 'weights': 0}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 0, 0), trueBool, 0, 2, 2), learnerType('ARGMAX', {'sampling_rate': 1}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 0, 0), trueBool, 0, 2, 2), learnerType('LIGHTGBM', {'max_depth': -1, 'learning_rate': 0.1, 'boosting_type': 0, 'num_leaves': 31}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 0, 0), falseBool, 0, 2, 3), learnerType('XGBOOST', {'learning_rate': 0.1, 'max_depth': 3, 'n_estimators': 100, 'reg_alpha': 0.0, 'reg_lambda': 1.0}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 0, 0), falseBool, 0, 2, 3), learnerType('DECISION_TREE', {'criterion': 0, 'splitter': 0}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 0, 0), falseBool, 0, 2, 3), learnerType('KNN_REGRESSION', {'K': 3, 'weights': 0}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 0, 0), falseBool, 0, 2, 3), learnerType('BOOSTING_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 100, 'max_depth': 3}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 0, 0), trueBool, 0, 2, 4), learnerType('SGD', {'penalty': 0, 'alpha': 0.0001}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 0, 0), trueBool, 0, 2, 4), learnerType('KNN', {'K': 3, 'weights': 0}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 0, 0), trueBool, 0, 2, 4), learnerType('PASSIVE', {'C': 1.0}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 0, 0), trueBool, 0, 2, 4), learnerType('LOGR', {'penalty': 0, 'C': 1.0}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 0, 0), falseBool, 0, 2, 2), learnerType('XGBOOST', {'learning_rate': 0.1, 'max_depth': 3, 'n_estimators': 100, 'reg_alpha': 0.0, 'reg_lambda': 1.0}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 0, 0), falseBool, 0, 2, 2), learnerType('LINSVC', {'C': 1.0}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 0, 0), falseBool, 0, 2, 2), learnerType('RAND_FOREST', {'n_estimators': 100, 'criterion': 0, 'max_depth': 3, 'class_weight': 0}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 0, 0), falseBool, 0, 2, 2), learnerType('BOOSTING_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 100, 'max_depth': 3}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 1, 0), 0, 100, 300, 0, trueBool), learnerType('KNN', {'K': 3, 'weights': 0}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 1, 0), 0, 100, 300, 0, trueBool), learnerType('ARGMAX', {'sampling_rate': 1}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 1, 0), 0, 100, 300, 0, trueBool), learnerType('LINSVC', {'C': 1.0}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 1, 0), 0, 100, 300, 0, trueBool), learnerType('DECISION_TREE', {'criterion': 0, 'splitter': 0}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 1, 0), 0, 100, 300, 0, falseBool), learnerType('SVM', {'C': 1.0, 'kernel': 0}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 1, 0), 0, 100, 300, 0, falseBool), learnerType('LINSVC', {'C': 1.0}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 1, 0), 0, 100, 300, 0, falseBool), learnerType('SVM_REGRESSION', {'kernel': 0}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 1, 0), 0, 100, 300, 0, falseBool), learnerType('RAND_FOREST', {'n_estimators': 100, 'criterion': 0, 'max_depth': 3, 'class_weight': 0}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 1, 0), trueBool, 0, 2, 4), learnerType('LIGHTGBM', {'max_depth': -1, 'learning_rate': 0.1, 'boosting_type': 0, 'num_leaves': 31}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 1, 0), trueBool, 0, 2, 4), learnerType('LOGR', {'penalty': 0, 'C': 1.0}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 1, 0), trueBool, 0, 2, 4), learnerType('PASSIVE', {'C': 1.0}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 1, 0), trueBool, 0, 2, 4), learnerType('SVM_REGRESSION', {'kernel': 0}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 1, 0), falseBool, 0, 2, 1), learnerType('KMEANS', {'n_clusters': 8}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 1, 0), falseBool, 0, 2, 1), learnerType('KNN_REGRESSION', {'K': 3, 'weights': 0}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 1, 0), falseBool, 0, 2, 1), learnerType('ADABOOST_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 100}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 1, 0), falseBool, 0, 2, 1), learnerType('SVM', {'C': 1.0, 'kernel': 0}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 1, 0), trueBool, 0, 2, 2), learnerType('KNN', {'K': 3, 'weights': 0}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 1, 0), trueBool, 0, 2, 2), learnerType('EXTRATREES', {'n_estimators': 100, 'max_depth': 6, 'criterion': 0}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 1, 0), trueBool, 0, 2, 2), learnerType('SVM_REGRESSION', {'kernel': 0}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 1, 0), trueBool, 0, 2, 2), learnerType('RAND_FOREST', {'n_estimators': 100, 'criterion': 0, 'max_depth': 3, 'class_weight': 0}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 1, 0), falseBool, 0, 2, 0), learnerType('LINSVC', {'C': 1.0}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 1, 0), falseBool, 0, 2, 0), learnerType('LOGR', {'penalty': 0, 'C': 1.0}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 1, 0), falseBool, 0, 2, 0), learnerType('BOOSTING', {'learning_rate': 0.1, 'n_estimators': 100, 'max_depth': 3}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 1, 0), falseBool, 0, 2, 0), learnerType('SVM_REGRESSION', {'kernel': 0}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 1, 0), trueBool, 0, 2, 4), learnerType('SVM_REGRESSION', {'kernel': 0}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 1, 0), trueBool, 0, 2, 4), learnerType('ADABOOST_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 100}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 1, 0), trueBool, 0, 2, 4), learnerType('KNN', {'K': 3, 'weights': 0}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 1, 0), trueBool, 0, 2, 4), learnerType('KMEANS', {'n_clusters': 8}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 1, 0), falseBool, 0, 2, 1), learnerType('XGBOOST', {'learning_rate': 0.1, 'max_depth': 3, 'n_estimators': 100, 'reg_alpha': 0.0, 'reg_lambda': 1.0}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 1, 0), falseBool, 0, 2, 1), learnerType('DECISION_TREE', {'criterion': 0, 'splitter': 0}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 1, 0), falseBool, 0, 2, 1), learnerType('BOOSTING_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 100, 'max_depth': 3}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 1, 0), falseBool, 0, 2, 1), learnerType('BOOSTING', {'learning_rate': 0.1, 'n_estimators': 100, 'max_depth': 3}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 2, 0), 1, 200, 400, 2, trueBool), learnerType('KMEANS', {'n_clusters': 8}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 2, 0), 1, 200, 400, 2, trueBool), learnerType('LINSVC', {'C': 1.0}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 2, 0), 1, 200, 400, 2, trueBool), learnerType('SVM_REGRESSION', {'kernel': 0}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 2, 0), 1, 200, 400, 2, trueBool), learnerType('SGD', {'penalty': 0, 'alpha': 0.0001}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 2, 0), 1, 200, 400, 2, falseBool), learnerType('BOOSTING', {'learning_rate': 0.1, 'n_estimators': 100, 'max_depth': 3}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 2, 0), 1, 200, 400, 2, falseBool), learnerType('LIGHTGBM', {'max_depth': -1, 'learning_rate': 0.1, 'boosting_type': 0, 'num_leaves': 31}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 2, 0), 1, 200, 400, 2, falseBool), learnerType('SVM_REGRESSION', {'kernel': 0}, 'SINGLE', None))
Learner(Word2VecVectorizer(Stemmatizer(ARG0, 2, 0), 1, 200, 400, 2, falseBool), learnerType('XGBOOST', {'learning_rate': 0.1, 'max_depth': 3, 'n_estimators': 100, 'reg_alpha': 0.0, 'reg_lambda': 1.0}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 2, 0), trueBool, 0, 2, 2), learnerType('ARGMAX', {'sampling_rate': 1}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 2, 0), trueBool, 0, 2, 2), learnerType('SGD', {'penalty': 0, 'alpha': 0.0001}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 2, 0), trueBool, 0, 2, 2), learnerType('LIGHTGBM', {'max_depth': -1, 'learning_rate': 0.1, 'boosting_type': 0, 'num_leaves': 31}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 2, 0), trueBool, 0, 2, 2), learnerType('LINSVC', {'C': 1.0}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 2, 0), falseBool, 0, 2, 3), learnerType('SVM_REGRESSION', {'kernel': 0}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 2, 0), falseBool, 0, 2, 3), learnerType('PASSIVE', {'C': 1.0}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 2, 0), falseBool, 0, 2, 3), learnerType('SVM', {'C': 1.0, 'kernel': 0}, 'SINGLE', None))
Learner(HashingVectorizer(Stemmatizer(ARG0, 2, 0), falseBool, 0, 2, 3), learnerType('RANDFOREST_REGRESSION', {'n_estimators': 100, 'criterion': 0}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 2, 0), trueBool, 0, 2, 4), learnerType('XGBOOST', {'learning_rate': 0.1, 'max_depth': 3, 'n_estimators': 100, 'reg_alpha': 0.0, 'reg_lambda': 1.0}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 2, 0), trueBool, 0, 2, 4), learnerType('SVM_REGRESSION', {'kernel': 0}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 2, 0), trueBool, 0, 2, 4), learnerType('RAND_FOREST', {'n_estimators': 100, 'criterion': 0, 'max_depth': 3, 'class_weight': 0}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 2, 0), trueBool, 0, 2, 4), learnerType('PASSIVE', {'C': 1.0}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 2, 0), falseBool, 0, 2, 0), learnerType('SGD', {'penalty': 0, 'alpha': 0.0001}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 2, 0), falseBool, 0, 2, 0), learnerType('KMEANS', {'n_clusters': 8}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 2, 0), falseBool, 0, 2, 0), learnerType('PASSIVE', {'C': 1.0}, 'SINGLE', None))
Learner(TfidfVectorizer(Stemmatizer(ARG0, 2, 0), falseBool, 0, 2, 0), learnerType('LINSVC', {'C': 1.0}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 2, 0), trueBool, 0, 2, 1), learnerType('LOGR', {'penalty': 0, 'C': 1.0}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 2, 0), trueBool, 0, 2, 1), learnerType('BOOSTING_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 100, 'max_depth': 3}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 2, 0), trueBool, 0, 2, 1), learnerType('ARGMIN', {'sampling_rate': 1}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 2, 0), trueBool, 0, 2, 1), learnerType('LIGHTGBM', {'max_depth': -1, 'learning_rate': 0.1, 'boosting_type': 0, 'num_leaves': 31}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 2, 0), falseBool, 0, 2, 1), learnerType('LIGHTGBM', {'max_depth': -1, 'learning_rate': 0.1, 'boosting_type': 0, 'num_leaves': 31}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 2, 0), falseBool, 0, 2, 1), learnerType('SGD', {'penalty': 0, 'alpha': 0.0001}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 2, 0), falseBool, 0, 2, 1), learnerType('DECISION_TREE', {'criterion': 0, 'splitter': 0}, 'SINGLE', None))
Learner(CountVectorizer(Stemmatizer(ARG0, 2, 0), falseBool, 0, 2, 1), learnerType('KNN', {'K': 3, 'weights': 0}, 'SINGLE', None))
Learner(Word2VecVectorizer(ARG0, 0, 100, 300, 2, trueBool), learnerType('KNN_REGRESSION', {'K': 3, 'weights': 0}, 'SINGLE', None))
Learner(Word2VecVectorizer(ARG0, 0, 100, 300, 2, trueBool), learnerType('XGBOOST', {'learning_rate': 0.1, 'max_depth': 3, 'n_estimators': 100, 'reg_alpha': 0.0, 'reg_lambda': 1.0}, 'SINGLE', None))
Learner(Word2VecVectorizer(ARG0, 0, 100, 300, 2, trueBool), learnerType('PASSIVE', {'C': 1.0}, 'SINGLE', None))
Learner(Word2VecVectorizer(ARG0, 0, 100, 300, 2, trueBool), learnerType('ARGMAX', {'sampling_rate': 1}, 'SINGLE', None))
Learner(Word2VecVectorizer(ARG0, 0, 100, 300, 2, falseBool), learnerType('EXTRATREES', {'n_estimators': 100, 'max_depth': 6, 'criterion': 0}, 'SINGLE', None))
Learner(Word2VecVectorizer(ARG0, 0, 100, 300, 2, falseBool), learnerType('LIGHTGBM', {'max_depth': -1, 'learning_rate': 0.1, 'boosting_type': 0, 'num_leaves': 31}, 'SINGLE', None))
Learner(Word2VecVectorizer(ARG0, 0, 100, 300, 2, falseBool), learnerType('SGD', {'penalty': 0, 'alpha': 0.0001}, 'SINGLE', None))
Learner(Word2VecVectorizer(ARG0, 0, 100, 300, 2, falseBool), learnerType('KNN', {'K': 3, 'weights': 0}, 'SINGLE', None))
Learner(HashingVectorizer(ARG0, trueBool, 0, 2, 3), learnerType('BOOSTING_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 100, 'max_depth': 3}, 'SINGLE', None))
Learner(HashingVectorizer(ARG0, trueBool, 0, 2, 3), learnerType('RANDFOREST_REGRESSION', {'n_estimators': 100, 'criterion': 0}, 'SINGLE', None))
Learner(HashingVectorizer(ARG0, trueBool, 0, 2, 3), learnerType('LINSVC', {'C': 1.0}, 'SINGLE', None))
Learner(HashingVectorizer(ARG0, trueBool, 0, 2, 3), learnerType('SVM_REGRESSION', {'kernel': 0}, 'SINGLE', None))
Learner(HashingVectorizer(ARG0, falseBool, 0, 2, 0), learnerType('SVM_REGRESSION', {'kernel': 0}, 'SINGLE', None))
Learner(HashingVectorizer(ARG0, falseBool, 0, 2, 0), learnerType('BOOSTING_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 100, 'max_depth': 3}, 'SINGLE', None))
Learner(HashingVectorizer(ARG0, falseBool, 0, 2, 0), learnerType('LIGHTGBM', {'max_depth': -1, 'learning_rate': 0.1, 'boosting_type': 0, 'num_leaves': 31}, 'SINGLE', None))
Learner(HashingVectorizer(ARG0, falseBool, 0, 2, 0), learnerType('KMEANS', {'n_clusters': 8}, 'SINGLE', None))
Learner(TfidfVectorizer(ARG0, trueBool, 0, 2, 4), learnerType('SGD', {'penalty': 0, 'alpha': 0.0001}, 'SINGLE', None))
Learner(TfidfVectorizer(ARG0, trueBool, 0, 2, 4), learnerType('LOGR', {'penalty': 0, 'C': 1.0}, 'SINGLE', None))
Learner(TfidfVectorizer(ARG0, trueBool, 0, 2, 4), learnerType('LINSVC', {'C': 1.0}, 'SINGLE', None))
Learner(TfidfVectorizer(ARG0, trueBool, 0, 2, 4), learnerType('EXTRATREES', {'n_estimators': 100, 'max_depth': 6, 'criterion': 0}, 'SINGLE', None))
Learner(TfidfVectorizer(ARG0, falseBool, 0, 2, 1), learnerType('RAND_FOREST', {'n_estimators': 100, 'criterion': 0, 'max_depth': 3, 'class_weight': 0}, 'SINGLE', None))
Learner(TfidfVectorizer(ARG0, falseBool, 0, 2, 1), learnerType('LOGR', {'penalty': 0, 'C': 1.0}, 'SINGLE', None))
Learner(TfidfVectorizer(ARG0, falseBool, 0, 2, 1), learnerType('DECISION_TREE', {'criterion': 0, 'splitter': 0}, 'SINGLE', None))
Learner(TfidfVectorizer(ARG0, falseBool, 0, 2, 1), learnerType('ADABOOST_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 100}, 'SINGLE', None))
Learner(CountVectorizer(ARG0, trueBool, 0, 2, 1), learnerType('ARGMAX', {'sampling_rate': 1}, 'SINGLE', None))
Learner(CountVectorizer(ARG0, trueBool, 0, 2, 1), learnerType('ARGMIN', {'sampling_rate': 1}, 'SINGLE', None))
Learner(CountVectorizer(ARG0, trueBool, 0, 2, 1), learnerType('EXTRATREES', {'n_estimators': 100, 'max_depth': 6, 'criterion': 0}, 'SINGLE', None))
Learner(CountVectorizer(ARG0, trueBool, 0, 2, 1), learnerType('ADABOOST_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 100}, 'SINGLE', None))
Learner(CountVectorizer(ARG0, falseBool, 0, 2, 4), learnerType('SGD', {'penalty': 0, 'alpha': 0.0001}, 'SINGLE', None))
Learner(CountVectorizer(ARG0, falseBool, 0, 2, 4), learnerType('DECISION_TREE', {'criterion': 0, 'splitter': 0}, 'SINGLE', None))
Learner(CountVectorizer(ARG0, falseBool, 0, 2, 4), learnerType('KMEANS', {'n_clusters': 8}, 'SINGLE', None))
Learner(CountVectorizer(ARG0, falseBool, 0, 2, 4), learnerType('LIGHTGBM', {'max_depth': -1, 'learning_rate': 0.1, 'boosting_type': 0, 'num_leaves': 31}, 'SINGLE', None))
Learner(Sentiment(ARG0, trueBool), learnerType('ARGMIN', {'sampling_rate': 1}, 'SINGLE', None))
Learner(Sentiment(ARG0, trueBool), learnerType('LIGHTGBM', {'max_depth': -1, 'learning_rate': 0.1, 'boosting_type': 0, 'num_leaves': 31}, 'SINGLE', None))
Learner(Sentiment(ARG0, trueBool), learnerType('PASSIVE', {'C': 1.0}, 'SINGLE', None))
Learner(Sentiment(ARG0, trueBool), learnerType('SVM_REGRESSION', {'kernel': 0}, 'SINGLE', None))
Learner(Sentiment(ARG0, falseBool), learnerType('ADABOOST_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 100}, 'SINGLE', None))
Learner(Sentiment(ARG0, falseBool), learnerType('BOOSTING_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 100, 'max_depth': 3}, 'SINGLE', None))
Learner(Sentiment(ARG0, falseBool), learnerType('SVM_REGRESSION', {'kernel': 0}, 'SINGLE', None))
Learner(Sentiment(ARG0, falseBool), learnerType('KMEANS', {'n_clusters': 8}, 'SINGLE', None))